{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","text","Textbox","useState","setText","t","split","length","toFixed","style","backgroundColor","color","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","showAlert","join","Alert","alert","class","role","message","App","darkMode","setdarkMode","textVal","setTextVal","setAlert","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"wNAIe,SAASA,EAAOC,GAE3B,OACE,qBAAKC,UAAU,aAAf,SACE,qBACEA,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,gBAAgBE,KAAK,IAAlC,SACE,kDAEF,wBACEF,UAAU,iBACVG,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMR,UAAU,0BAElB,sBACEA,UAAU,2BACVS,GAAG,yBAFL,UAIE,oBAAIT,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBU,eAAa,OAAOR,KAAK,IAAxD,4BAUJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAiB,OAAS,SAA/E,UACE,uBACAU,QAASZ,EAAMa,WACbZ,UAAU,mBACVG,KAAK,WACLM,GAAG,mBAEL,uBAAOI,QAAQ,iBAAf,SAAiCd,EAAMe,oBChDxC,SAASC,EAAQhB,GAAQ,IAAD,EACZiB,mBAAS,IADG,mBAC5BF,EAD4B,KACvBG,EADuB,KAiC/BC,EAAI,KAAOJ,EAAKK,MAAM,KAAKC,OAK/B,OAJAF,EAAIA,EAAEG,QAAQ,GAKV,sBAAKrB,UAAU,YAAf,UACI,sBAAKsB,MAAS,CACVC,gBAA8B,SAAbxB,EAAME,KAAgB,UAAY,QACnDuB,MAAmB,SAAbzB,EAAME,KAAgB,QAAU,SAF1C,UAIA,6BAAKF,EAAM0B,UACX,qBAAKzB,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAesB,MAAS,CACxCC,gBAA8B,SAAbxB,EAAME,KAAgB,OAAS,QAChDuB,MAAmB,SAAbzB,EAAME,KAAgB,QAAU,SACvCyB,MAAOZ,EAAMa,SAtCJ,SAACC,GACjBX,EAAQW,EAAMC,OAAOH,QAqCsBjB,GAAG,QAAQqB,KAAK,QAGvD,wBAAQ9B,UAAU,4BAA4BW,QAjDlC,WAChB,IAAIoB,EAAUjB,EAAKkB,cACnBf,EAAQc,IA+CJ,kCAGA,wBAAQ/B,UAAU,uBAAuBW,QAhDtB,WACvB,IAAIoB,EAAUjB,EAAKmB,cACnBhB,EAAQc,IA8CJ,kCAGA,wBAAQ/B,UAAU,uBAAuBW,QAtC9B,WACf,IAAIG,EAAOoB,SAASC,eAAe,SACnCrB,EAAKsB,SAELC,UAAUC,UAAUC,UAAUzB,EAAKY,OACnC3B,EAAMyC,UAAU,2BAA2B,YAiCvC,uBAGA,wBAAQxC,UAAU,sBAAsBW,QAjC3B,WACjB,IAAIoB,EAAUjB,EAAKK,MAAM,QACzBF,EAAQc,EAAQU,KAAK,OA+BjB,gCACA,wBAAQzC,UAAU,sBAAsBW,QA/C5B,WAChBM,EAAQ,IACRlB,EAAMyC,UAAU,eAAe,WA6C3B,2BAGA,sBAAKxC,UAAU,iBAAiBsB,MAAS,CACrCC,gBAA8B,SAAbxB,EAAME,KAAgB,UAAY,QACnDuB,MAAmB,SAAbzB,EAAME,KAAgB,QAAU,SAF1C,UAII,mDAGA,+BACY,KAAPa,EAAY,EAAEA,EAAKK,MAAM,KAAKC,OADnC,WACmDN,EAAKM,OADxD,iBAIA,8CACiBF,EADjB,2BAIA,yCAGA,6BACKJ,EAAKM,OAAO,EAAEN,EAAK,0CCnFzB,SAAS4B,EAAM3C,GAC1B,OACIA,EAAM4C,OAAS,qBAAK3C,UAAU,YAAf,SACf,qBACE4C,MAAK,sBAAiB7C,EAAM4C,MAAMxC,KAA7B,gCACL0C,KAAK,QAFP,SAII,iCAAS9C,EAAM4C,MAAMG,cC0ClBC,MAzCf,WAAgB,IAAD,EACmB/B,mBAAS,SAD5B,mBACNgC,EADM,KACIC,EADJ,OAEiBjC,mBAAS,oBAF1B,mBAENkC,EAFM,KAEGC,EAFH,OAGanC,mBAAS,MAHtB,mBAGN2B,EAHM,KAGCS,EAHD,KAKPZ,EAAY,SAACM,EAAS3C,GACxBiD,EAAS,CAACN,QAASA,EACjB3C,KAAKA,IACLkD,YAAW,WACTD,EAAS,QACT,MAiBR,OACE,sBAAKpD,UAAU,MAAf,UAEE,cAACF,EAAD,CAAQG,KAAM+C,EAAUpC,WAjBT,WACH,UAAXoC,GACHC,EAAY,QACZf,SAASoB,KAAKhC,MAAMC,gBAAkB,UACtC4B,EAAW,qBACXX,EAAU,6BAA6B,aAGrCS,EAAY,SACZE,EAAW,oBACXjB,SAASoB,KAAKhC,MAAMC,gBAAkB,QACtCiB,EAAU,8BAA8B,aAMU1B,KAAMoC,IACxD,cAACR,EAAD,CAAOC,MAASA,IAChB,qBAAK3C,UAAU,YAAf,SAGE,cAACe,EAAD,CAASU,QAAU,kCAAkCxB,KAAM+C,EAAUR,UAAWA,UCxCxFe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,U","file":"static/js/main.5043a0ac.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n\n    return (\n      <div className=\"Navigation\">\n        <nav\n          className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n        >\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand \" href=\"#\">\n              <strong>Text Utils</strong>\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                    Alter Text\n                  </a>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/about\">\n                    About\n                  </a>\n                </li> */}\n              </ul>\n              <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\n                <input\n                onClick={props.toggleMode}\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"darkModeSwitch\"\n                />\n                <label htmlFor=\"darkModeSwitch\">{props.text}</label>\n              </div>\n              {/* <form className=\"d-flex\">\n        <input className=\"form-control me-5\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n      </form> */}\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n}\n","import React,{useState} from 'react'\nexport default function Textbox(props) {\n    const [text,setText] = useState('');\n\n    const handleClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n    }\n    const handleClicktoLower = ()=>{\n        let newText = text.toLowerCase();\n        setText(newText);\n    }\n    const handleEvent = (event) => {\n        setText(event.target.value);\n    }\n    \n    const handleClear = () =>{\n        setText('');\n        props.showAlert(\"Text Cleared\",\"danger\");\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        // text.setSelectionRange(0,9999);\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text Copied to Clipboard\",\"success\");\n    }\n\n    const handleSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n    }\n\n    var t = 0.008 *text.split(\" \").length\n    t = t.toFixed(4);\n     \n\n\n    return (\n        <div className=\"container\">\n            <div style = {{\n                backgroundColor: props.mode==='dark' ? '#11085c' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n            <textarea className=\"form-control\" style = {{\n                backgroundColor: props.mode==='dark' ? 'grey' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }} value={text} onChange={handleEvent} id=\"myBox\" rows=\"5\"></textarea>\n            </div>\n\n            <button className=\"btn btn-primary mx-5 my-5\" onClick={handleClick}>\n            Convert to Uppercase\n            </button>\n            <button className=\"btn btn-primary mx-5\" onClick={handleClicktoLower}>\n            Convert to Lowercase\n            </button>\n            <button className=\"btn btn-primary mx-5\" onClick={handleCopy}>\n            Copy Text\n            </button>\n            <button className=\"btn btn-danger mx-5\" onClick={handleSpaces}>Clear Extra Spaces</button>\n            <button className=\"btn btn-danger mx-5\" onClick={handleClear}>Clear Text</button>\n            </div>\n\n            <div className=\"container my-5\" style = {{\n                backgroundColor: props.mode==='dark' ? '#11085c' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }}>\n                <h2>\n                    Your Text Summary\n                </h2>\n                <h4>\n                    {text===\"\" ? 0:text.split(\" \").length} Words, {text.length} Characters\n                </h4>\n                \n                <h5>\n                    You require {t} Minutes to read this\n                </h5>\n\n                <h2>\n                    Preview\n                </h2>\n                <h4>\n                    {text.length>0?text:\"Enter Some text in the text Box\"}\n                </h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        props.alert && <div className=\"container\">\n        <div\n          class={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n            <strong>{props.alert.message}</strong>\n        </div>\n      </div>\n    );\n}\n","import './App.css';\nimport {useState} from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\nimport Alert from './components/Alert';\n\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n// import MainScreen from './components/MainScreen';\n\nfunction App() {\n  const [darkMode, setdarkMode] = useState('light');\n  const [textVal, setTextVal] = useState('Enable Dark Mode')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n      setAlert({message: message,\n        type:type})\n        setTimeout(() => {\n          setAlert(null)\n        },2000)\n  }\n\n  const toggleMode = () => {\n    if(darkMode==='light'){\n    setdarkMode('dark')\n    document.body.style.backgroundColor = '#11085c';\n    setTextVal('Enable Light Mode')\n    showAlert(\"Dark Mode Has Been Enabled\",\"success\");\n    }\n    else{\n      setdarkMode('light')\n      setTextVal('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\",\"primary\");\n    }\n  }\n  return (\n    <div className=\"App\">\n\n      <Navbar mode={darkMode} toggleMode = {toggleMode} text={textVal}/>\n      <Alert alert = {alert}/>\n      <div className=\"container\">\n      \n        \n        <Textbox heading = \"Enter The Text To Analyze Below\" mode={darkMode} showAlert={showAlert} />\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
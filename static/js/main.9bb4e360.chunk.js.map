{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","text","Textbox","useState","setText","t","split","filter","elem","length","toFixed","style","backgroundColor","color","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","showAlert","join","Alert","height","alert","class","role","message","App","darkMode","setdarkMode","textVal","setTextVal","setAlert","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9bb4e360.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n\n    return (\n      <div className=\"Navigation\">\n        <nav\n          className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n        >\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand \" href=\"#\">\n              <strong>Text Utils</strong>\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                    Alter Text\n                  </a>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/about\">\n                    About\n                  </a>\n                </li> */}\n              </ul>\n              <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\n                <input\n                onClick={props.toggleMode}\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"darkModeSwitch\"\n                />\n                <label htmlFor=\"darkModeSwitch\">{props.text}</label>\n              </div>\n              {/* <form className=\"d-flex\">\n        <input className=\"form-control me-5\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n      </form> */}\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n}\n","import React,{useState} from 'react'\nexport default function Textbox(props) {\n    const [text,setText] = useState('');\n\n    const handleClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n    }\n    const handleClicktoLower = ()=>{\n        let newText = text.toLowerCase();\n        setText(newText);\n    }\n    const handleEvent = (event) => {\n        setText(event.target.value);\n    }\n    \n    const handleClear = () =>{\n        setText('');\n        props.showAlert(\"Text Cleared\",\"danger\");\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        // text.setSelectionRange(0,9999);\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text Copied to Clipboard\",\"success\");\n    }\n\n    const handleSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n    }\n\n    var t = 0.0080 * text.split(\" \").filter(\n        (elem)=>{\n            return elem.length!==0\n        }\n    ).length\n    if(t===0){\n        t = t.toFixed(0);\n    }\n    else\n    t = t.toFixed(4);\n     \n\n\n    return (\n        <div className=\"container my-5\">\n            <div style = {{\n                backgroundColor: props.mode==='dark' ? '#11085c' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n            <textarea className=\"form-control\" style = {{\n                backgroundColor: props.mode==='dark' ? '#13466e' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }} value={text} onChange={handleEvent} id=\"myBox\" rows=\"5\"></textarea>\n            </div>\n\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClick}>\n            Convert to Uppercase\n            </button>\n            <button className=\"btn btn-primary mx-1 my 1\" onClick={handleClicktoLower}>\n            Convert to Lowercase\n            </button>\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>\n            Copy Text\n            </button>\n            <button className=\"btn btn-danger mx-1 my-1\" onClick={handleSpaces}>Clear Extra Spaces</button>\n            <button className=\"btn btn-danger mx-1 my-1\" onClick={handleClear}>Clear Text</button>\n            </div>\n\n            <div className=\"container my-5\" style = {{\n                backgroundColor: props.mode==='dark' ? '#11085c' : 'white',\n                color:props.mode==='dark' ? 'white' : 'black'\n            }}>\n                <h2>\n                    Your Text Summary\n                </h2>\n                <h4>\n                    {text.split(\" \").filter(\n                        (elem)=>{\n                            return elem.length!==0\n                        }\n                    ).length} Words, {text.length} Characters\n                </h4>\n                \n                <h5>\n                    You require {t} Minutes to read this\n                </h5>\n\n                <h2>\n                    Preview\n                </h2>\n                <h4>\n                    {text.length>0?text:\"Enter Some text in the text Box\"}\n                </h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        <div style={{height:'40px'}}>\n            {props.alert && <div className=\"container\">\n        <div\n          class={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n            <strong>{props.alert.message}</strong>\n        </div>\n      </div>}\n        </div>\n        \n    );\n}\n","import './App.css';\nimport {useState} from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\nimport Alert from './components/Alert';\n\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n// import MainScreen from './components/MainScreen';\n\nfunction App() {\n  const [darkMode, setdarkMode] = useState('light');\n  const [textVal, setTextVal] = useState('Enable Dark Mode')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n      setAlert({message: message,\n        type:type})\n        setTimeout(() => {\n          setAlert(null)\n        },2000)\n  }\n\n  const toggleMode = () => {\n    if(darkMode==='light'){\n    setdarkMode('dark')\n    document.body.style.backgroundColor = '#11085c';\n    setTextVal('Enable Light Mode')\n    showAlert(\"Dark Mode Has Been Enabled\",\"success\");\n    }\n    else{\n      setdarkMode('light')\n      setTextVal('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\",\"primary\");\n    }\n  }\n  return (\n    <div className=\"App\">\n\n      <Navbar mode={darkMode} toggleMode = {toggleMode} text={textVal}/>\n      <Alert alert = {alert}/>\n      <div className=\"container\">\n      \n        \n        <Textbox heading = \"Enter The Text To Analyze Below\" mode={darkMode} showAlert={showAlert} />\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}